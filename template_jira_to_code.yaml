apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: jira-to-code
  title: Jira ticket to code template 
  description: Template to generate programming code using Jira Description 
spec:
  owner: team-a
  type: service

  parameters:
    - title: Jira Ticket Information
      properties:
        jiraId:
          title: Jira ticket ID
          type: string
          description: Jira ticket ID
      required:
        - jiraId
    - title: Repository Information
      properties:
        repoUrl:
          title: GitHub Repository URL
          type: string
          description: The URL of the GitHub repository to assess
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        targetBranch:
          title: Target branch with fix (if any)
          type: string
          description: The name of the target branch in which fix will be checked-in
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
      required:
        - repoUrl
        - targetBranch
        - owner
    - title: Controller File Name
      properties:
        filename:
          type: string
          description: The name of the controller file where the new method will be added.
      required:
        - filename

  steps:
    - id: create-branch
      name: Create Branch
      action: github:create-branch
      input:
        owner: ${{ parameters.owner }}
        sourceBranch: ${{ parameters.repoUrl }}
        destinationBranch: ${{ parameters.targetBranch }}
    - id: fetch-jira-issue
      name: Fetch Jira issue
      action: custom:jiraconnector
      input:
        jiraId: ${{ parameters.jiraId }}
    - id: create-method-controller
      name: Create Method in Controller
      action: custom:codegenerator
      input:
        repoUrl: ${{ parameters.repoUrl }}
        targetBranch: ${{ parameters.targetBranch }}
        filename: Dotnet.Samples.AspNetCore.WebApi/Controllers/${{ parameters.filename }}
        methodrequirement: Define the API endpoint for following requirement and Do not delete any existing methods. ${{ steps['fetch-jira-issue'].output.description }}

    - id: create-method-service-interface
      name: Create Method in Service Interface
      action: custom:codegenerator
      input:
        repoUrl: ${{ parameters.repoUrl }}
        targetBranch: ${{ parameters.targetBranch }}
        filename: Dotnet.Samples.AspNetCore.WebApi/Services/${{ steps['create-method-controller'].output.dependentFileName }}
        methodrequirement: Define the DependentMethod in the interface for this implementation. The method should return a ValueTask<Player?>. You can determine the interface method name from the DependentMethod details. ${{ steps['create−method−controller'].output.methodName}} .The initial prompt was ${{ steps['fetch-jira-issue'].output.description }}.

    - id: implement-service-method
      name: Implement Service Method
      action: custom:codegenerator
      input:
        repoUrl: ${{ parameters.repoUrl }}
        targetBranch: ${{ parameters.targetBranch }}
        filename: Dotnet.Samples.AspNetCore.WebApi/Services/${{ steps['create-method-service-interface'].output.dependentFileName }}
        methodrequirement: Implement the method ${{ steps['create−method−service−interface'].output.methodName }} and Do not delete any existing methods. The method should returnaValue Task<Player?> and must be production−ready.The initial prompt was ${{ steps['fetch-jira-issue'].output.description }}. Return only the programming code without any additional explanation. 
        
    - id: raise-pull-request
      name: Raise Pull Request
      action: github:create-pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        sourceBranch: ${{ parameters.targetBranch }}
        destinationBranch: master
        pullRequestTitle: "New Method Implementation"

  output:
    links:
      - title: PR
        url: ${{ steps['raise-pull-request'].output.pullRequestUrl }}
