apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: net-webapi-new-service
  title: Create New Service Template
  description: Template to add a new service to a .NET Web API controller.
spec:
  owner: team
  type: service

  parameters:
    - title: Repository Information
      properties:
        repoUrl:
          title: GitHub Repository URL
          type: string
          description: The URL of the GitHub repository to assess
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        targetBranch:
          title: Target branch with fix (if any)
          type: string
          description: The name of the target branch in which fix will be checked-in
      required:
        - repoUrl
        - targetBranch
    - title: Controller File Name
      properties:
        filename:
          type: string
          description: The name of the controller file where the new method will be added.
      required:
        - filename
    - title: New Method Requirement
      properties:
        methodrequirement:
          type: string
          description: Description of the new method to be implemented.
      required:
        - methodrequirement

  steps:
    - id: create-method-controller
      name: Create Method in Controller
      action: custom:codegenerator
      input:
        repoUrl: ${{ parameters.repoUrl }}
        targetBranch: ${{ parameters.targetBranch }}
        filename: Dotnet.Samples.AspNetCore.WebApi/Controllers/${{ parameters.filename }}
        methodrequirement: ${{ parameters.methodrequirement }}

    - id: create-method-service-interface
      name: Create Method in Service Interface
      action: custom:codegenerator
      input:
        repoUrl: ${{ parameters.repoUrl }}
        targetBranch: ${{ parameters.targetBranch }}
        filename: Dotnet.Samples.AspNetCore.WebApi/Services/IPlayerService.cs
        methodrequirement: ${{ steps.create-method-controller.output.dependentfiles.methodrequirement }}

    - id: implement-service-method
      name: Implement Service Method
      action: github:actions
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: ${{ parameters.targetBranch }}
        filePath: 'path/to/service/Service.cs'
        commitMessage: "Implement new method in service"
        content: |
          // Implement the new method in the service class
          public class Service : IService
          {
              public void NewMethod()
              {
                  // Business logic implementation based on ${{ parameters.methodrequirement }}
              }
          }

    - id: raise-pull-request
      name: Raise Pull Request
      action: github:actions
      input:
        repoUrl: ${{ parameters.repoUrl }}
        sourceBranch: ${{ parameters.targetBranch }}
        targetBranch: master
        title: "New Method Implementation"
        description: "This PR includes the implementation of a new method in the controller and service."

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
