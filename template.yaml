metadata:
  name: dotnetcore-webapi-template
  title: .NET Core Web API Template
  description: Template for creating a .NET Core Web API project with .NET 8
  tags:
    - dotnetcore
    - webapi
    - net8
spec:
  owner: user:mishraabhay2010
  type: service

  parameters:
    - title: Project Name
      description: The name of the project
      required:
        - name
        - owner
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        description:
          title: Description
          type: string
          description: Help others understand what this webApi is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - location
      properties:
        location:
          title: Repository Location
          type: string
          description: Repository location
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
    - title: GOCD Configuration
      description: Configuration for GOCD CI/CD
      required:
        - gocdPipelineName
        - gocdServerUrl
      properties:
        gocdPipelineName:
          title: GOCD Pipeline Name
          type: string
          description: Name of the GOCD pipeline
        gocdServerUrl:
          title: GOCD Server URL
          type: string
          description: URL of the GOCD server

  steps:
    - id: fetch-repository
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.location | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          pipelineName: ${{ parameters.gocdPipelineName }}
    - id: configure-gocd
      name: Configure GOCD
      action: shell:script
      input:
        script: |
          echo "Configuring GOCD pipeline..."
          cat <<EOF > gocd-config.yaml
          pipelines:
            - name: ${{ parameters.gocdPipelineName }}
              materials:
                - git:
                    url: ${{ parameters.location }}
              stages:
                - name: build
                  jobs:
                    - name: build
                      tasks:
                        - exec:
                            command: dotnet
                            arguments: ["build"]
                - name: test
                  jobs:
                    - name: test
                      tasks:
                        - exec:
                            command: dotnet
                            arguments: ["test"]
          EOF
          curl -u username:password -X POST -H "Content-Type: application/json" -d @gocd-config.yaml ${{ parameters.gocdServerUrl }}/go/api/admin/pipelines
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.location }}
    - id: create-component
      name: Create Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}